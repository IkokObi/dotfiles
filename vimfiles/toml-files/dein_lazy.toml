[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']


[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']
hook_add = '''
let g:vimtex_compiler_latexmk_engines = { '_' : '-pdfdvi' }
let g:vimtex_compiler_latexmk = {
     \ 'background': 1,
     \ 'build_dir': '',
     \ 'continuous': 1,
     \ 'options': [
     \    '-pdfdvi', 
     \    '-verbose',
     \    '-file-line-error',
     \    '-synctex=1',
     \    '-interaction=nonstopmode',
     \],
     \}

let g:vimtex_view_general_viewer
     \ = '/Applications/Skim.app/Contents/SharedSupport/displayline'
let g:vimtex_view_general_options = '-r @line @pdf @tex'
autocmd FileType tex syntax spell toplevel
let g:vimtex_compiler_latexmk['callback'] = 0 "callbackの警告を表示しない

if !exists('g:neocomplete#sources#omni#input_patterns')
	let g:neocomplete#sources#omni#input_patterns = {}
endif
" ===== 以下エラーが出る =====
" let g:neocomplete#sources#omni#input_patterns.tex =
" 	\ g:vimtex#re#neocomplete
" エラーログ
" [dein] Error occurred while executing hook: vimtex
" [dein] Vim(let):E121: Undefined variable: g:vimtex#re#neocomplete
" ============================
"
" ---> 愚直な対処をした(vimtex#re#neocompleteの中身を貼り付けた)
let g:neocomplete#sources#omni#input_patterns.tex =
      \ '\v\\%('
      \ .  '\a*cite\a*%(\s*\[[^]]*\]){0,2}\s*\{[^}]*'
      \ . '|%(text|block)cquote\*?%(\s*\[[^]]*\]){0,2}\s*\{[^}]*'
      \ . '|%(for|hy)\w*cquote\*?\{[^}]*}%(\s*\[[^]]*\]){0,2}\s*\{[^}]*'
      \ . '|\a*ref%(\s*\{[^}]*|range\s*\{[^,}]*%(}\{)?)'
      \ . '|hyperref\s*\[[^]]*'
      \ . '|includegraphics\*?%(\s*\[[^]]*\]){0,2}\s*\{[^}]*'
      \ . '|%(include%(only)?|input|subfile)\s*\{[^}]*'
      \ . '|\a*(gls|Gls|GLS)(pl)?\a*%(\s*\[[^]]*\]){0,2}\s*\{[^}]*'
      \ . '|includepdf%(\s*\[[^]]*\])?\s*\{[^}]*'
      \ . '|includestandalone%(\s*\[[^]]*\])?\s*\{[^}]*'
      \ . '|%(usepackage|RequirePackage|PassOptionsToPackage)%(\s*\[[^]]*\])?\s*\{[^}]*'
      \ . '|documentclass%(\s*\[[^]]*\])?\s*\{[^}]*'
      \ . '|begin%(\s*\[[^]]*\])?\s*\{[^}]*'
      \ . '|end%(\s*\[[^]]*\])?\s*\{[^}]*'
      \ . '|\a*'
      \ . ')'
'''


[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript']


[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['css', 'html', 'javascript']


[[plugins]]
repo = 'marijnh/tern_for_vim'
on_ft = ['javascript']
# npm installの必要あり


# [[plugins]]
# repo = 'pangloss/vim-javascript'
# on_ft = ['javascript']
# hook_add = '''
# let g:javascript_plugin_flow = 1
# '''


[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['md', 'markdown']


[[plugins]]
repo = 'kannokanno/previm'
on_ft = ['md', 'markdown']
hook_add = '''
nnoremap <silent> <C-o> :PrevimOpen<CR> " Ctrl-oでプレビュー
" 自動で折りたたまないようにする
let g:vim_markdown_folding_disabled=1
let g:previm_enable_realtime = 1
'''


# ===== Games =====
[[plugins]]
repo = 'rbtnn/game_engine.vim'
on_ft = ['text']


[[plugins]]
repo = 'rbtnn/puyo.vim'
on_ft = ['text']


[[plugins]]
repo = 'rbtnn/mario.vim'
on_ft = ['text']


[[plugins]]
repo = 'vim-scripts/TeTrIs.vim'
on_ft = ['text']

