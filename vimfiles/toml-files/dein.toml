[[plugins]]
repo = 'Shougo/dein.vim'


[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
let g:lsp_diagnostics_enabled = 0
'''


[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
hook_add = '''
inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr>    pumvisible() ? "\<C-y>" : "\<cr>"
'''


[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'


[[plugins]]
repo = 'prabirshrestha/async.vim'


[[plugins]]
repo = 'SirVer/ultisnips'


[[plugins]]
repo = 'honza/vim-snippets'


[[plugins]]
repo = 'prabirshrestha/asyncomplete-ultisnips.vim'
hook_add = '''
let g:UltiSnipsExpandTrigger="<CR>"
call asyncomplete#register_source(asyncomplete#sources#ultisnips#get_source_options({
  \ 'name': 'ultisnips',
  \ 'whitelist': ['*'],
  \ 'completor': function('asyncomplete#sources#ultisnips#completor'),
  \ }))
'''


[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
nnoremap <silent><Space>f :NERDTreeToggle<CR>
'''


[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = {
\   'outputter/buffer/split': ':right 1sp'
\ }
nnoremap <expr><silent> <C-c> quickrun#is_running()
\ ? quickrun#sweep_sessions() : "\<C-c>"
'''


[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
" ファイルタイプの自動検出を一旦offにする
" deinを使ったときにcaw.vimがうまく機能しなかったときにこれで直った
" (参考URL) http://d.hatena.ne.jp/wiredool/20120618/1340019962
filetype off
filetype plugin indent off

" 行の最初の文字の前にコメント文字をトグル
nmap <C-i> <Plug>(caw:hatpos:toggle)
vmap <C-i> <Plug>(caw:hatpos:toggle)
" 行頭にコメントをトグル
nmap <Leader>c <Plug>(caw:zeropos:toggle)
vmap <Leader>c <Plug>(caw:zeropos:toggle)

" ファイルタイプの自動検出を有効にする
filetype plugin indent on
'''


[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
nmap gl <Plug>(openbrowser-smart-search)
vmap gl <Plug>(openbrowser-smart-search)
'''


[[plugins]]
repo = 'Townk/vim-autoclose'
hook_add='''
let g:AutoCloseProtectedRegions = ["Character"]
'''
# pythonで' "がうまく動かない?
# let g:AutoClosePairs = "() {} [] \" \'"
#


[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
let g:ale_linters = {
\ 'python': ['flake8'],
\ }
let g:ale_fixers = {
\ 'python': ['isort', 'black'],
\ }
let g:ale_sign_column_always = 1
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 0
let g:ale_fix_on_save = 1
nnoremap <silent> <Space>m :ALEPrevious<CR>
nnoremap <silent> <Space>n :ALENext<CR>
let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']
'''


[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes', 'ale']
hook_add = '''
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#ale#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline_left_sep = ''
let g:airline_right_sep = ''
let g:airline#extensions#default#layout = [
\ ['a', 'b', 'c'],
\ ['x', 'y', 'z', 'error', 'warning']
\ ]
nmap <C-p> <Plug>AirlineSelectPrevTab
nmap <C-n> <Plug>AirlineSelectNextTab
nmap <C-d> :bd<Enter>
'''
# power-line fontのインストールが必要



[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
let g:airline_theme = 'jellybeans'
'''


[[plugins]]
repo = 'tpope/vim-fugitive'
# vim-airlineのために残す


[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
let g:indentLine_color_term = 111
let g:indentLine_char = '¦'
'''


[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0


[[plugins]]
repo = 'junegunn/fzf.vim'
depends = ['fzf']
